{% if section.settings.product != blank %}
  {% assign product = all_products[section.settings.product] %}
{% else %}
  {% assign product = null %}
{% endif %}
{% if product %}
  {% assign form_id = 'product-form-' | append: product.id %}
{% endif %}

{% assign is_hat = false %}
{% if product.type contains 'Hat' %}
  {% assign is_hat = true %}
{% endif %}

<section class="custom-product-info-section">
  {% if product %}
    <div
      class="custom-product-info-section__container"
    >
      <div class="product-layout">
        <div
          class="product-background-image desktop-image"
          style="
            {% if section.settings.background_image %}
            background-image: url({{ section.settings.background_image | image_url }});
            {% endif %}
            background-size: cover;
            background-position: center;
          "
        ></div>
        <div
          class="product-background-image mobile-image"
          style="
            {% if section.settings.background_image_mobile %}
            background-image: url({{ section.settings.background_image_mobile | image_url }});
            {% endif %}
            background-size: cover;
            background-position: center;
          "
        ></div>
        <!-- Product Details Left Side -->
        <div class="product-details">
          <h1 class="product-title">{{ product.title }}</h1>

          <span class="price">{{ product.price | money_without_trailing_zeros }} USD</span>

          <div class="product-description">
            {{ product.description }}
          </div>

          <!-- Color Selector -->
          <div class="color-selector">
            <div class="color-option-label">COLOR</div>
            <div class="color-swatches" id="dynamic-color-swatches"></div>
          </div>

          <!-- Size Selector -->
          {% assign size_option = product.options_by_name.Size %}
          {% if size_option %}
            <div class="size-selector">
              <div class="size-header">
                <div class="size-option-label">SIZE</div>
                {% comment %} <a href="#" class="size-guide">SIZE GUIDE</a> {% endcomment %}
              </div>
              <div class="size-options">
                {% assign size_map = 'Small:S,Medium:M,Large:L,Extra Large:XL' | split: ',' %}
                {% for size in size_option.values %}
                  {% assign display_size = size %}
                  {% for size_pair in size_map %}
                    {% assign pair = size_pair | split: ':' %}
                    {% if pair[0] == size %}
                      {% assign display_size = pair[1] %}
                      {% break %}
                    {% endif %}
                  {% endfor %}
                  <input
                    form="{{ form_id }}"
                    type="radio"
                    id="size-{{ size | handleize }}"
                    name="options[Size]"
                    value="{{ size }}"
                    data-variant-input
                  >
                  <label for="size-{{ size | handleize }}" class="size-option">{{ display_size }}</label>
                {% endfor %}
              </div>
            </div>
          {% endif %}

          {% if is_hat %}
            <div class="model-size-info">Our guy Cole is 6'2'' and wearing size L shorts.</div>
          {% endif %}

          <!-- Model Size Info -->
          {% assign model_size_text = '' %}
          {% capture model_size_text %}{% render 'product-model-sizes', product_handle: product.handle %}{% endcapture %}
          {% if model_size_text != blank %}
            <div class="model-size-info">
              {{ model_size_text }}
            </div>
          {% endif %}

          <!-- Add to Cart Button -->
          {% form 'product', product, id: form_id, class: 'product-single__form' %}
            <input
              type="hidden"
              name="id"
              value="{{ product.selected_or_first_available_variant.id }}"
              data-product-select
            >
            <button type="submit" class="btn-add-to-cart" data-add-to-cart>
              <span data-add-to-cart-text>ADD TO CART</span>
              <span class="btn-add-to-cart__slashes">//</span>
            </button>
          {% endform %}
        </div>
      </div>
    </div>
  {% else %}
    <div class="custom-product-info-section__placeholder">
      <p>Please select a product in the section settings to display product information.</p>
    </div>
  {% endif %}
</section>

<style>
  .custom-product-info-section__container {
    position: relative;
    min-height: 800px;
    font-family: 'Barlow', sans-serif !important;
  }

  .product-layout {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    min-height: 800px;
    position: relative;
  }

  .product-background-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
  }

  .product-background-image.mobile-image {
    display: none;
  }

  .product-background-image.desktop-image {
    display: block;
  }

  .product-details {
    width: 500px;
    height: 620px;
    background: rgba(255, 255, 255, 0.95);
    padding: 20px;
    box-shadow: 2px 2px 12px rgba(0, 0, 0, 0.1);
    border-radius: 2px;
    backdrop-filter: blur(10px);
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: space-between;
    gap: 16px;
    margin-left: 80px;
    z-index: 1;
  }

  .product-title {
    font-size: 24px;
    font-weight: 600;
    margin: 0px;
    line-height: 1.3;
    color: #000;
    letter-spacing: 0.05em;
  }

  .price {
    font-size: 18px;
    font-weight: 600;
    color: #000;
  }

  .product-description {
    line-height: 1.3;
    font-size: 13px;
    color: #333;
    font-weight: 400;
  }

  .color-option-label,
  .size-option-label {
    font-size: 12px;
    font-weight: 600;
    letter-spacing: 0.05em;
    text-transform: uppercase;
    padding: 0px;
    margin: 0px;
    color: #000;
    margin-bottom: 6px;
  }

  .color-swatches {
    display: flex;
    gap: 8px;
  }

  .color-swatches input[type='radio'],
  .size-header {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 6px;
  }

  .size-guide {
    font-size: 12px;
    color: #000;
    text-decoration: underline;
    font-weight: 400;
  }

  .model-size-info {
    font-size: 13px;
    font-style: italic;
    color: #666;
    font-weight: 400;
    line-height: 1.4;
    padding: 0px;
    margin: 0px;
  }

  .size-options {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    height: 40px;
    gap: 0px;
  }

  .size-options input[type='radio'] {
    display: none;
  }

  .size-option {
    height: 40px;
    flex-grow: 1;
    margin: 0px;
    padding: 12px 16px;
    border: 1px solid #ddd;
    background: #fff;
    font-size: 20px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    min-width: 48px;
    text-align: center;
  }

  .size-option:hover {
    border-color: #000;
  }

  .size-options input[type='radio']:checked + .size-option {
    background: var(--selected-color, #000);
    color: #fff;
    border-color: var(--selected-color, #000);
  }

  .btn-add-to-cart {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    padding: 16px 24px;
    color: #fff;
    background: #000;
    border: 1px solid transparent;
    /* border: none; */
    font-size: 16px;
    font-weight: 500;
    letter-spacing: 0.03em;
    text-transform: uppercase;
    cursor: pointer;
    transition: all 0.3s ease;
    font-family: 'Barlow', sans-serif !important;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
  }

  .btn-add-to-cart__slashes {
    display: inline-block;
    font-size: 20px;
    font-weight: 600;
    transition: transform 0.3s ease;
  }

  .btn-add-to-cart:hover {
    background-color: #000000bc;
    border: 1px solid transparent;
  }

  .btn-add-to-cart:hover .btn-add-to-cart__slashes {
    transform: rotate(180deg);
  }

  /* Mobile Responsiveness */
  @media (max-width: 768px) {
    .product-layout {
      flex-direction: column;
      min-height: auto;
    }

    .product-background-image {
      position: relative;
      min-height: 400px;
      width: 75%;
      order: 1;
    }

    .product-background-image.desktop-image {
      display: none;
    }

    .product-background-image.mobile-image {
      display: block;
    }

    .product-details {
      position: relative;
      width: 100%;
      height: 520px;
      background-color: white;
      margin: 0px;
      border-radius: 8px;
      order: 2;
      z-index: 1;
    }

    .product-title {
      font-size: 20px;
      font-weight: 600;
    }

    .custom-product-info-section__container {
      min-height: auto;
    }

    .btn-add-to-cart {
      background: #cb5c28;
    }

    .btn-add-to-cart:hover {
      background-color: #a84920;
      border: 1px solid transparent;
    }
  }

  @media (max-width: 550px) {
    .product-details {
      height: 600px;
    }
  }
  /* Color Swatch Styles */
  .product-page-color-swatch-container {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .product-page-color-swatch-tooltip {
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    background-color: #666;
    color: white;
    padding: 4px 8px;
    border-radius: 2px;
    font-size: 12px;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.2s ease, visibility 0.2s ease;
    margin-bottom: 8px;
    z-index: 10;
  }

  .product-page-color-swatch-tooltip::after {
    content: '';
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    border: 5px solid transparent;
    border-top-color: #666;
  }

  .product-page-color-swatch-container:hover .product-page-color-swatch-tooltip {
    opacity: 1;
    visibility: visible;
  }

  .product-page-color-swatch {
    display: inline-block;
    width: 32px;
    height: 32px;
    text-decoration: none;
    border: 1px solid white;
    border-radius: 50%;
    background: transparent;
    transition: box-shadow 0.2s ease-in-out;
  }

  .product-page-color-swatch[data-color='White'],
  .product-page-color-swatch[data-color='Slate'] {
    border: 1px solid #ccc;
  }

  .product-page-color-swatch:hover,
  .product-page-color-swatch.active {
    box-shadow: 0 0 0 2px rgba(0, 0, 0, 1);
  }
</style>

<script>
  const productVariants = {{ product.variants | json }};

  const sizeMap = {
    'Small': 'S',
    'Medium': 'M',
    'Large': 'L',
    'Extra Large': 'XL'
  };

  function getSelectedSize() {
    const sizeInput = document.querySelector('input[name="options[Size]"]:checked');
    return sizeInput ? sizeInput.value : null;
  }

  function findVariantBySize(size) {
    return productVariants.find(variant => variant.option1 === size);
  }

  function updateVariantId() {
    const selectedSize = getSelectedSize();
    const variant = findVariantBySize(selectedSize);
    const hiddenInput = document.querySelector('input[name="id"]');

    if (variant && hiddenInput) {
      hiddenInput.value = variant.id;

      const addToCartBtn = document.querySelector('[data-add-to-cart]');
      const addToCartText = document.querySelector('[data-add-to-cart-text]');

      if (variant.available) {
        addToCartBtn.disabled = false;
        addToCartText.textContent = 'ADD TO CART';
        addToCartBtn.classList.remove('btn--sold-out');
      } else {
        addToCartBtn.disabled = true;
        addToCartText.textContent = 'SOLD OUT';
        addToCartBtn.classList.add('btn--sold-out');
      }

      const url = new URL(window.location);
      url.searchParams.set('variant', variant.id);
      window.history.replaceState({}, '', url);
    }
  }

  function setActiveColorSwatch() {
    if (!window.getCurrentColor) return;

    const productHandle = '{{ product.handle }}';
    const color = window.getCurrentColor(productHandle);

    if (color) {
      document.querySelectorAll('.product-page-color-swatch').forEach((swatch) => {
        swatch.classList.toggle('active', swatch.dataset.color === color);
      });
    }
  }

  function initializeColorSwatches() {
    if (!window.getAvailableColors || !window.ColorMap || !window.applyColorToSwatch) {
      setTimeout(initializeColorSwatches, 100);
      return;
    }

    const container = document.getElementById('dynamic-color-swatches');
    if (!container) return;

    const productHandle = '{{ product.handle }}';
    const availableColors = window.getAvailableColors(productHandle);
    const currentColor = window.getCurrentColor && window.getCurrentColor(productHandle);

    // Clear existing swatches
    container.innerHTML = '';

    availableColors.forEach((color) => {
      const isActive = color === currentColor;

      const swatchContainer = document.createElement('div');
      swatchContainer.className = 'product-page-color-swatch-container';

      const tooltip = document.createElement('div');
      tooltip.className = 'product-page-color-swatch-tooltip';
      tooltip.textContent = color;

      const swatch = document.createElement('label');
      swatch.className = `product-page-color-swatch ${isActive ? 'active' : ''}`;
      swatch.setAttribute('data-color', color);
      swatch.setAttribute('for', `color-${color.toLowerCase().replace(/\s+/g, '-')}`);

      // Apply color from centralized ColorMap
      window.applyColorToSwatch(swatch, color);

      swatchContainer.appendChild(tooltip);
      swatchContainer.appendChild(swatch);
      container.appendChild(swatchContainer);
    });

    // Attach event listeners after creating swatches
    attachColorSwatchListeners();
  }

  function handleColorSwatchClick(colorName) {

    const productHandle = '{{ product.handle }}';
    const targetProductHandle = window.getColorVariantHandle(productHandle, colorName);

    if (targetProductHandle) {
      window.location.href = `/products/${targetProductHandle}`;
    }
  }

  function selectSizeFromVariant(variantId) {
    const variant = productVariants.find(v => v.id == variantId);
    if (!variant?.option1) return;

    const sizeInput = document.querySelector(`input[name="options[Size]"][value="${variant.option1}"]`);
    if (sizeInput) {
      document.querySelectorAll('input[name="options[Size]"]').forEach(input => {
        input.checked = false;
      });
      sizeInput.checked = true;
      updateVariantId(); // Update form and URL after selecting size
    }
  }

  function attachColorSwatchListeners() {
    document.querySelectorAll('.product-page-color-swatch').forEach(swatch => {
      swatch.addEventListener('click', function(e) {
        e.preventDefault();
        handleColorSwatchClick(this.dataset.color);
      });
    });
  }

  document.addEventListener('DOMContentLoaded', function () {
    initializeColorSwatches();
    setActiveColorSwatch();

    const url = new URL(window.location);
    const variantParam = url.searchParams.get('variant');
    const defaultVariant = {{ product.selected_or_first_available_variant | json }};

    const variantId = variantParam ?? defaultVariant?.id;
    if (variantId) {
      selectSizeFromVariant(variantId);
    } else {
      // Ensure form has a valid variant ID even without URL param
      updateVariantId();
    }

    document.querySelectorAll('input[data-variant-input]').forEach(input => {
      input.addEventListener('change', updateVariantId);
    });
  });
</script>

{% schema %}
{
  "name": "Product Info Section",
  "class": "product-info-section",
  "presets": [
    {
      "name": "Product Info Section"
    }
  ],
  "settings": [
    {
      "type": "header",
      "content": "Product Settings"
    },
    {
      "type": "product",
      "id": "product",
      "label": "Select Product"
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Background Image",
      "info": "Select a background image for the product section"
    },
    {
      "type": "image_picker",
      "id": "background_image_mobile",
      "label": "Background Image Mobile",
      "info": "Select a background image for the product section on mobile"
    }
  ]
}
{% endschema %}
