{% comment %}
  Color Swatch Component

  Parameters:
  - product: Required - The product object
  - current_color: Optional - The currently selected color (for active state)
{% endcomment %}

<div class="color-swatches-container" data-product-handle="{{ product.handle }}">
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      function initializeColorSwatches() {
        if (!window.getAvailableColors || !window.getColorVariantHandle || !window.getCurrentColor) {
          setTimeout(initializeColorSwatches, 100);
          return;
        }

        const container = document.querySelector('[data-product-handle="{{ product.handle }}"] .color-swatches-container');
        if (!container) return;

        const productHandle = '{{ product.handle }}';
        const availableColors = window.getAvailableColors(productHandle);
        const currentColor = window.getCurrentColor(productHandle) || '{{ current_color }}';

        availableColors.forEach((color) => {
          const colorVariantHandle = window.getColorVariantHandle(productHandle, color);
          const isActive = color === currentColor;

          const swatchContainer = document.createElement('div');
          swatchContainer.className = 'color-swatch-container';
          swatchContainer.innerHTML = `
            <div class="color-swatch-tooltip">${color}</div>
            <a
              href="/products/${colorVariantHandle}"
              class="color-swatch-custom ${isActive ? 'active' : ''}"
              data-color="${color}"
              onmouseover="updateActiveColorSwatch('${productHandle}', '${color}')"
            ></a>
          `;
          container.appendChild(swatchContainer);
        });
      }

      initializeColorSwatches();
    });
  </script>
</div>

<style>
  /* Color Swatches Styles */
  .color-swatches-container {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 6px 16px;
    display: flex;
    justify-content: flex-start;
    gap: 6px;
    transform: translateY(110%);
    transition: transform 0.2s ease;
  }

  .product-cell:hover .color-swatches-container {
    transform: translateY(-10%);
  }

  .color-swatch-container {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    opacity: 0;
    transform: translateY(20px);
    animation: cascadeIn 0.2s ease forwards;
  }

  .color-swatch-container:nth-child(1) {
    animation-delay: 0s;
  }
  .color-swatch-container:nth-child(2) {
    animation-delay: 0.1s;
  }
  .color-swatch-container:nth-child(3) {
    animation-delay: 0.2s;
  }
  .color-swatch-container:nth-child(4) {
    animation-delay: 0.3s;
  }
  .color-swatch-container:nth-child(5) {
    animation-delay: 0.4s;
  }

  @keyframes cascadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Tooltip Styles */
  .color-swatch-tooltip {
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    background-color: #666;
    color: white;
    padding: 4px 8px;
    border-radius: 2px;
    font-size: 12px;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.2s ease, visibility 0.2s ease;
    margin-bottom: 8px;
    z-index: 10;
  }

  .color-swatch-tooltip::after {
    content: '';
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    border: 5px solid transparent;
    border-top-color: #666;
  }

  .color-swatch-container:hover .color-swatch-tooltip {
    opacity: 1;
    visibility: visible;
  }

  .color-swatch-custom {
    display: inline-block;
    width: 24px;
    height: 24px;
    text-decoration: none;
    border: 1px solid white;
    border-radius: 50%;
    background: transparent;
    transition: box-shadow 0.2s ease-in-out;
  }

  .color-swatch-custom:hover {
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 1);
  }

  .color-swatch-custom.active {
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 1);
  }

  @media (max-width: 768px) {
    .color-swatches-container {
      padding: 6px;
      gap: 4px;
    }
  }

  /* Color-specific styles */
  .color-swatch-custom[data-color='Mountain Mist'] {
    background-color: #6a7e8d;
  }

  .color-swatch-custom[data-color='Midnight'] {
    background-color: #101820;
  }

  .color-swatch-custom[data-color='Mint'] {
    background-color: #b4c8c2;
  }

  .color-swatch-custom[data-color='Tangerine'] {
    background-color: #ff8a00;
  }

  .color-swatch-custom[data-color='White'] {
    background-color: #ffffff;
    border-color: #ccc;
  }

  .color-swatch-custom[data-color='Slate'] {
    background-color: #708090;
  }
</style>

<script>
  // Function to update active color swatch on hover
  window.updateActiveColorSwatch = function (productHandle, color) {
    const productCell = document.querySelector(`[data-product-handle="${productHandle}"]`);
    if (productCell) {
      const container = productCell.querySelector('.color-swatches-container');
      if (container) {
        // Remove active class from all swatches in this container
        container.querySelectorAll('.color-swatch-custom').forEach((swatch) => {
          swatch.classList.remove('active');
        });

        // Add active class to the hovered color
        const activeSwatch = container.querySelector(`[data-color="${color}"]`);
        if (activeSwatch) {
          activeSwatch.classList.add('active');
        }
      }
    }
  };
</script>
