<section id="CustomHero-{{ section.id }}" class="custom-hero-section">
  <div
    class="custom-hero-image{% if section.settings.custom_hero_image != blank %} has-ratio{% else %} custom-hero-image--fallback{% endif %}"
    style="background-image: url('{{ section.settings.custom_hero_image | image_url }}');{% if section.settings.custom_hero_image != blank %} padding-bottom: {{ 100 | divided_by: section.settings.custom_hero_image.aspect_ratio }}%;{% endif %}"
  >
    <div class="custom-hero-content">
      <div class="intro-content">
        <div class="intro-badge">
          <em class="intro-badge-text">INTRODUCING</em>
        </div>
        <img
          src="https://cdn.shopify.com/s/files/1/0686/3988/3581/files/white_logo2.svg?v=1754627217"
          class="intro-logo-image"
          width="400"
          height="600"
        >
        <div class="intro-text">DISCIPLINE LOOKS GOOD NOW</div>
      </div>

      {% render 'cta-button', url: '/pages/membership', text: 'OWN THE START', class: 'hero-cta-custom' %}
    </div>
  </div>
</section>

<style>
  /* Initial state before animation */
  .custom-hero-section .custom-hero-image {
    width: 100%;
    opacity: 0;
    transform: scale(1.04);
    will-change: opacity, transform;
  }

  /* Triggered state */
  .custom-hero-section.is-ready .custom-hero-image {
    animation: heroFadeInScale-{{ section.id }} 800ms ease-out forwards;
  }

  @keyframes heroFadeInScale-{{ section.id }} {
    0% {
      opacity: 0;
      transform: scale(1.04);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

  .custom-hero-image {
    position: relative;
    width: 100%;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }

  /* When we know the image ratio, we use padding-bottom to create the correct height */
  .custom-hero-image.has-ratio {
    height: 0;
  }

  /* Fallback height only when no image is set */
  .custom-hero-image--fallback {
    min-height: 60vh;
  }

  .custom-hero-content {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: flex;
    gap: 30px;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;
    padding-left: 40px;
    padding-right: 40px;
  }

  .intro-content {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    gap: clamp(10px, 2vw, 30px);
    padding-left: clamp(2em, 5vw, 4em);
    padding-right: clamp(2em, 5vw, 4em);
  }

  .intro-badge {
    background: rgba(255, 255, 255, 0.2);
    padding: clamp(6px, 1.5vw, 12px) clamp(8px, 2vw, 12px);
    border-radius: 4px;
    font-size: clamp(12px, 2.5vw, 16px);
    line-height: 1;
    letter-spacing: 0.04em;
  }

  .intro-badge-text {
    color: #fff;
    font-style: italic;
  }

  .intro-logo-image {
    width: clamp(90vw, 90vw, 90vw);
    height: auto;
    padding: 0;
    margin: 0;
    display: block;
  }

  .intro-text {
    font-size: clamp(24px, 6vw, 80px);
    font-weight: 400;
    letter-spacing: 0.03em;
    text-transform: uppercase;
    color: #fff;
  }

  /* Custom styling for the hero CTA button */
  .hero-cta-custom {
    margin-bottom: 14px;
  }

  /* Mobile-specific adjustments */
  @media (max-width: 768px) {
    .custom-hero-content {
      gap: 50px;
    }

    .intro-content {
      padding-left: 2em;
      padding-right: 2em;
    }

    .intro-text {
      font-size: clamp(14px, 6vw, 24px);
      line-height: 1.2;
    }

    .intro-logo-image {
      width: clamp(80vw, 80vw, 80vw);
    }

    .hero-cta-custom {
      margin-bottom: 8px;
      padding: 4px 8px;
      font-size: clamp(12px, 2.5vw, 14px);
    }
  }

  /* Extra small screens */
  @media (max-width: 480px) {
    .custom-hero-content {
      gap: 10px;
    }

    .intro-text {
      font-size: 18px;
    }

    .hero-cta-custom {
      margin-bottom: 4px;
      padding: 2px 4px;
      font-size: 12px;
    }
  }
</style>

<script>
  (function () {
    var section = document.getElementById('CustomHero-{{ section.id }}');
    if (!section) return;
    var markReady = function () {
      section.classList.add('is-ready');
    };

    var bgUrl = '{{ section.settings.custom_hero_image | image_url }}';
    if (bgUrl) {
      var preloader = new Image();
      preloader.onload = markReady;
      preloader.onerror = markReady;
      preloader.src = bgUrl;
    } else {
      markReady();
    }
  })();
</script>

{% schema %}
{
  "name": "Custom Hero Image",
  "settings": [
    {
      "type": "image_picker",
      "id": "custom_hero_image",
      "label": "Choose Hero Image"
    }
  ],
  "presets": [
    {
      "name": "Custom Hero Image",
      "category": "Custom"
    }
  ]
}
{% endschema %}
